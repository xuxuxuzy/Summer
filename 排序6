某次科研调查时得到了n个自然数，每个数均不超过1500000000（1.5*109）。
已知不相同的数不超过10000个，现在需要统计这些自然数各自出现的次数，并按照自然数从小到大的顺序输出统计结果。
输入描述:
第1行是整数n，表示自然数的个数。第2~n+1行每行一个自然数。
输出描述:
输出m行（m为n个自然数中不相同数的个数），按照自然数从小到大的顺序输出。
每行输出两个整数，分别是自然数和该数出现的次数，其间用一个空格隔开。

思路
1.获取输入n
2.依次获取每个自然数，存放在a[n]中
3.数组a排序
4.统计数字次数：
如果a[i]==a[i+1]，次数+1
否则（说明a[i]是当前数字出现的最后一次），输出a[i]和当前次数，然后将次数重置为1
 
#include<iostream>
#include<algorithm>
using namespace std;
int main()
{
    int n;
    cin>>n;
    int a[n];
    int count=1;//出现次数，初始为1
    //依次获取n个自然数
    for (int i = 0; i < n; ++i)
    {
        cin>>a[i];
    }
    //排序
    sort(a,a+n);
    //统计数字次数
    for (int i = 0; i < n; ++i)
    {
        if (a[i]==a[i+1])
        {
            count++;
        }
        else
        {
            cout<<a[i]<<" "<<count<<endl;
            count=1;
        }
    }
    return 0;
}
