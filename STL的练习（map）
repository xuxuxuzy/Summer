/*在牛牛面前放着nnn个数，这些数字既有奇数也有偶数，只不过牛牛对奇数情有独钟，他特别想让这些数都变成奇数。
现在牛牛获得了一种能力，他可以执行一种操作：每次选中一个偶数，然后把这些数中与该数相等的数都除以2，
例如现在有一个数组为[2,2,3][2,2,3][2,2,3]，那么牛牛可以执行一次操作，使得这个数组变为[1,1,3][1,1,3][1,1,3]。   
 牛牛现在想知道，对于任意的nnn个数，他最少需要操作多少次，使得这些数都变成奇数？ 
 
思路 
 用map容器记录下相同的偶数，然后再依次除二计算即可。*/
 
   map<int,int>mp,mpx;int x[1000010];
    int solve(int n, vector<int>& a) {
         
        int sum=0,k=0;
        for(int i=0;i<n;++i)
        {
            if(a[i]%2!=0||mp[a[i]]==1)
            continue;
            mp[a[i]]=1;
            x[k++]=a[i];
        }
       for(int i=k-1;i>=0;i--)
       {
           if(mpx[x[i]]==1)
               continue;
           while(x[i]%2==0)
           {
               if(mpx[x[i]]==0)
               sum++;
               mpx[x[i]]=1;
               x[i]/=2;
           }
       }
        return sum;
       }
