牛牛为了让牛妹崇拜他，决定和牛妹进行石头剪刀布游戏。 
当然，普通的石头剪刀布根本吸引不到牛妹，也无法展现牛牛高超的能力，所以牛牛想起了他在一本漫画中看到的规则，游戏规则如下： 
两个人进行石头剪刀布大战，开始时会发给每个人n张牌，然后两人进行n次剪刀石头布大战，每一次两人分别选择自己的n张牌中的一张，打出，每张牌只能用一次。 
牛牛每赢一局会+1分，每输一局会-1分，每平局一局不加分也不减分。 
牛牛这个游戏已经玩到了出神入化的地步，以至于他能猜到每一次牛妹会出什么牌。请问在知道牛妹每一轮出什么牌的情况下，牛牛最终的分数最高多少分？ 
开始发给牛牛的n张牌里，有p1张石头牌，q1张剪刀牌，m1张布牌。 
开始发给牛妹的n张牌里，有p2张石头牌，q2张剪刀牌，m2张布牌。 
请返回牛牛的最高得分


思路 先找出必赢的次数，然后找出平局次数，最后剩下的就是必输的次数减去就好；

 class Solution {
public:
    /**
     * 
     * @param n int整型 
     * @param p1 int整型 
     * @param q1 int整型 
     * @param m1 int整型 
     * @param p2 int整型 
     * @param q2 int整型 
     * @param m2 int整型 
     * @return int整型
     */
    int Highestscore(int n, int p1, int q1, int m1, int p2, int q2, int m2) {
        int sum=0,a,b,c;;
       
        if(p1>q2)
        {
sum+=q2;
            p1=p1-q2;
            q2=0;
        }
        else{
            
            sum+=p1;
            q2=q2-p1;
            p1=0;
        }
        if(q1>m2)
        {
sum+=m2;
            q1=q1-m2;
            m2=0;
        }
        else{
            
            sum+=q1;
            m2=m2-q1;
            q1=0;
        }
        if(m1>p2)
        {

        sum=sum+p2;
            m1=m1-p2;
            p2=0;
        }
        else
        {
            sum=sum+m1;
            p2=p2-m1;
            m1=0;
        }
        if(p1>p2)
        {
p1=p1-p2;
            p2=0;
        }
        else
        {

        p2=p2-p1;
            p1=0;
        }
        if(q1>q2)
        {
            q1=q1-q2;
            q2=0;
        }
        else
        {
            
            q2=q2-q1;
            q1=0;
        
            
    }
         if(m1>m2)
        {
            m1=m1-m2;
            m2=0;
        }
        else
        {
            
            m2=m2-m1;
            m1=0;
        }
        sum=sum-(p1+p2+q1+q2+m1+m2)/2;
        return sum;
    }
};
