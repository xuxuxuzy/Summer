/*HA实验有一套非常严密的安全保障体系，在HA实验基地的大门，有一个指纹锁。    
该指纹锁的加密算法会把一个指纹转化为一个不超过1e7的数字，
两个指纹数值之差越小，就说明两个指纹越相似，当两个指纹的数值差≤k时，这两个指纹的持有者会被系统判定为同一个人。
现在有3种操作，共m个，
操作1：add x，表示为指纹锁录入一个指纹，该指纹对应的数字为x，如果系统内有一个与x相差≤k的指纹，则系统会忽略这次添加操作
操作2：del x，表示删除指纹锁中的指纹x，若指纹锁中多个与x相差≤k的指纹，则全部删除，若指纹锁中没有指纹x，则可以忽略该操作，
操作3：query x，表示有一个持有指纹x的人试图打开指纹锁，你需要设计一个判断程序，返回该人是否可以打开指纹锁（只要x与存入的任何一个指纹相差≤k即可打开锁）。 
初始状态，指纹锁中没有任何指纹。
（题目）
输入 
第一行有2个正整数m，k。
接下来m行，每行描述一种操作：add x，del x或query x。

输出
对于每个query操作，输出一行，包含一个单词“Yes”或“No”，表示该人是否可以打开指纹锁。
 

思路
这道题就是简单的运用set容器 
介绍set容器
set容器就是一个用来放数据的容器。里面默认是升序排列，也可以自定义排序。 
set容器里面插入元素不会保留两个相同的元素。你插入多个1，也就是一个1。 
和sort自定义cmp一样。调用在初始化的时候就可以了：例子：set<int, cmp> p;。  
*/
//以下代码仅供参考 
#include<bits/stdc++.h>
using namespace std;
   
int x,m,k;
struct node{
    bool operator()(int a,int b){
        if(abs(a-b)<=k)return false;
        return a<b;
    }
};
int main()
{
    char R[9];
    set<int,node>T;
    scanf("%d%d",&m,&k);
    while(m--)
    {
        scanf("%s%d",R,&x);
        if(R[0]=='a')T.insert(x);
        if(R[0]=='d')T.erase(x);
        if(R[0]=='q')(T.find(x)!=T.end())?printf("Yes\n"):printf("No\n");
    }
    return 0;
}
