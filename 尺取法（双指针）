牛牛从牛毕那里拿了一根长度为n的白木板，木板被等分成了n段（没有被切割，只是虚拟划分成了n段），其中有些段被牛毕用颜料染成了黑色。
牛牛非常不喜欢黑色，它找来了一桶清洗剂决定对木板进行清洗，但是牛牛发现自己的清洗剂最多只能清洗m段。
清洗完后，牛牛会把木板锯成纯色的几段。例如假设木板是 （黑黑黑白白白白黑黑黑 ），就会被锯成（黑黑黑）（白白白白）（黑黑黑）三段。
牛牛想知道，它足够聪明地清洗木板，能获得的纯白色木板的最大长度是多少。 
输入： 
给定n,m两个整数
和一个长度为n的数组a，为1表示白色，为0表示黑色
输出： 
一行一个数字表示能获得的纯白色木板的最大长度是多少。 


思路 运用双指针进行尺取，如果l到r里面的黑色大于m就 移动l直到小于m，然后移动r，以此类推


 class Solution {
public:
    /**
     * 
     * @param n int整型 
     * @param m int整型 
     * @param a int整型vector 
     * @return int整型
     */
    int solve(int n, int m, vector<int>& a) {
        int i,l=0,maxn=0,sum=0;
        
        for(i=0;i<n;i++)
        {
          if(a[i]==0)
          {
            sum++;
          }
            while(sum>m)
            {
                if(a[l]==0)
             sum--;
               l++;
                }
            maxn=max(maxn,i-l+1);
        }
           
        return maxn;
    }
};
